name: CI Checks

on:
  pull_request:
    branches:
      - develop
      - main

jobs:
  changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      front: ${{ steps.filter.outputs.front }}
      back: ${{ steps.filter.outputs.back }}
    steps:
      - uses: actions/checkout@v3
      - name: Filter paths
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            front:
              - 'PenyFront/**'
            back:
              - 'peny-back/**'

  front-ci:
    name: Frontend CI Check
    needs: changes
    if: needs.changes.outputs.front == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: PenyFront/node_modules
          key: ${{ runner.os }}-PenyFront-${{ hashFiles('PenyFront/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-PenyFront-
      - name: Install dependencies
        run: cd PenyFront && npm install
      - name: Run Frontend CI Check
        run: npm run ci-check --prefix PenyFront

  back-ci:
    name: Backend CI Check
    needs: changes
    if: needs.changes.outputs.back == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: peny-back/node_modules
          key: ${{ runner.os }}-peny-back-${{ hashFiles('peny-back/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-peny-back-
      - name: Install dependencies
        run: cd peny-back && npm install
      - name: Run Backend CI Check
        run: npm run ci-check --prefix peny-back
